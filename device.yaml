# =============================================================================
# AXP2101 Single Cell PMIC with E-gauge Device Driver Definition
# =============================================================================
# This file defines the register map and configuration for the AXP2101
# Power Management IC manufactured by X-Powers.
#
# Features:
# - 3.9V-5.5V Input Operating Range
# - Single Cell Battery with Fuel Gauge (E-gauge 3.0)
# - 4 DC-DC converters (DCDC1-4)
# - 11 LDO regulators (ALDO1-4, BLDO1-2, DLDO1-2, CPUSLDO, RTCLDO1-2)
# - 100mA-1A Linear charger
# - 14-bit ADC for voltage/temperature monitoring
# - I2C/TWI and RSB interface support
#
# Interface: I2C (default address 0x68/0x69) or RSB
# Package: QFN-40 (5mm x 5mm)
# =============================================================================

config:
  # Address type for all registers (8-bit addressing)
  register_address_type: u8

  # Default byte order - single byte registers mostly
  default_byte_order: BE

  # Default bit order - LSB0 (bit 0 is least significant)
  default_bit_order: LSB0

  # Default access patterns
  default_register_access: RW
  default_field_access: RW

  # Enable defmt support for debugging
  defmt_feature: "defmt"

  # Name conversion for register/field names from datasheet
  name_word_boundaries: [ "Underscore", "Hyphen", "LowerUpper", "UpperDigit", "DigitUpper" ]

# =============================================================================
# STATUS AND IDENTIFICATION REGISTERS
# =============================================================================

PowerStatus:
  # REG00H - comm_stat0
  type: register
  address: 0x0
  size_bits: 8
  access: RO
  description: |
    Power management status register indicating various system states including
    VBUS status, BATFET state, battery presence, and thermal regulation.
  fields:
    # Bits 7-6 are reserved
    vbus_good:
      base: bool
      start: 5
      description: "VBUS good indication (true: good, false: not good)."

    batfet_state:
      base: bool
      start: 4
      description: "BATFET state (true: open, false: closed)."

    battery_present:
      base: bool
      start: 3
      description: "Battery present state (true: present, false: absent)."

    battery_active_mode:
      base: bool
      start: 2
      description: "Battery in Active Mode (true: active mode, false: normal)."

    thermal_regulation_active:
      base: bool
      start: 1
      description: "Thermal regulation status (true: in thermal regulation, false: normal)."

    current_limit_active:
      base: bool
      start: 0
      description: "Current limit state (true: in current limit, false: normal)."

SystemStatus:
  # REG01H - comm_stat1
  type: register
  address: 0x1
  size_bits: 8
  access: RO
  description: |
    System status register showing battery current direction, system power state,
    VINDPM status, and charging status.
  fields:
    # Bit 7 is reserved
    battery_current_direction:
      base: uint
      start: 5
      end: 7 # 2 bits
      description: "Battery current direction indicator."
      conversion:
        name: BatteryCurrentDirection
        Standby: { value: 0b00, description: "Battery in standby" }
        Charging: { value: 0b01, description: "Battery charging" }
        Discharging: { value: 0b10, description: "Battery discharging" }
        Reserved: { value: 0b11, description: "Reserved state" }

    system_power_on:
      base: bool
      start: 4
      description: "System status indication (true: system power on, false: system power off)."

    vindpm_active:
      base: bool
      start: 3
      description: "VINDPM status (true: in VINDPM, false: not in VINDPM)."

    charging_status:
      base: uint
      start: 0
      end: 3 # 3 bits
      description: "Charging status indication."
      conversion:
        name: ChargingStatus
        TriCharge: { value: 0b000, description: "Trickle charge mode" }
        PreCharge: { value: 0b001, description: "Pre-charge mode" }
        ConstantCurrent: { value: 0b010, description: "Constant current (CC) mode" }
        ConstantVoltage: { value: 0b011, description: "Constant voltage (CV) mode" }
        ChargeDone: { value: 0b100, description: "Charge completed" }
        NotCharging: { value: 0b101, description: "Not charging" }
        Reserved: { value: "default", description: "Reserved state" }

ChipId:
  # REG03H
  type: register
  address: 0x3
  size_bits: 8
  access: RO
  description: |
    Chip identification register containing version and ID information.
    Expected value for AXP2101 is 0x47 (0100_0111).
  fields:
    chip_id_high:
      base: uint
      start: 6
      end: 8 # 2 bits
      description: "Chip ID high bits."

    chip_version:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "Chip version."
      conversion:
        name: ChipVersion
        VersionA: { value: 0b00, description: "A version" }
        VersionB: { value: 0b01, description: "B version" }
        Reserved1: { value: 0b10, description: "Reserved" }
        Reserved2: { value: 0b11, description: "Reserved" }

    chip_id_low:
      base: uint
      start: 0
      end: 4 # 4 bits
      description: "Chip ID low bits. Combined with high bits: 01_0111 = AXP2101."

# =============================================================================
# DATA BUFFER REGISTERS
# =============================================================================

DataBuffer:
  # REG04H-REG08H
  type: register
  address: 0x4
  size_bits: 8
  access: RW
  reset_value: 0x0
  repeat:
    count: 5 # 5 data buffer registers (0x04-0x08)
    stride: 1 # Sequential addresses
  description: |
    General purpose data buffer registers for storing system data.
    These registers retain their values as long as any power source is present.
    Useful for storing configuration data or system state between resets.
  fields:
    data:
      base: uint
      start: 0
      end: 8
      description: "8-bit data storage value."

# =============================================================================
# CORE CONFIGURATION REGISTERS
# =============================================================================

CommonConfig:
  # REG10H - comm_cfg
  type: register
  address: 0x10
  size_bits: 8
  access: RW
  reset_value: 0x30 # Default 0x30 based on datasheet values
  description: |
    Common configuration register controlling various system behaviors including
    discharge control, restart functionality, and power-off controls.
  fields:
    # Bits 7-6 are reserved
    discharge_off_enable:
      base: bool
      start: 5
      description: "Internal off-discharge enable for DCDC & LDO & SWITCH (true: enable, false: disable)."

    # Bit 4 is reserved
    pwrok_restart_enable:
      base: bool
      start: 3
      description: "PWROK PIN pull low to restart the system (true: enable, false: disable)."

    power_on_shutdown_enable:
      base: bool
      start: 2
      description: "PWRON 16s to shutdown the PMIC enable (true: enable, false: disable)."

    soft_system_restart:
      base: bool
      start: 1
      access: WO
      description: "Restart the SoC System, POWOFF/POWON and reset related registers (true: reset)."

    soft_power_off:
      base: bool
      start: 0
      access: WO
      description: "Soft PWROFF (true: power off)."

BatfetControl:
  # REG12H - batfet_ctrl
  type: register
  address: 0x12
  size_bits: 8
  access: RW
  description: |
    BATFET control register for battery connection management and overcurrent protection.
  fields:
    # Bits 7-4 and 2, 0 are reserved
    batfet_poweroff_enable:
      base: bool
      start: 3
      description: "BATFET enable when POWEROFF and Battery only (true: enable, false: disable)."

    batfet_ocp_enable:
      base: bool
      start: 1
      description: "BATFET close when OCP (6A) for 100us (true: enable, false: disable)."

DieTempControl:
  # REG13H - die_temp_cfg
  type: register
  address: 0x13
  size_bits: 8
  access: RW
  reset_value: 0x3 # die_temp_det=1, die_otp_thld=01b (125deg)
  description: |
    Die temperature control register for setting over-temperature protection
    and enabling temperature detection.
  fields:
    # Bits 7:3 are reserved
    die_over_temp_protection_threshold:
      base: uint
      start: 1
      end: 3 # 2 bits
      description: "DIE Over Temperature Protection Level1 Config."
      conversion:
        name: DieOverTempThreshold
        Deg115: { value: 0b00, description: "115°C" }
        Deg125: { value: 0b01, description: "125°C" }
        Deg135: { value: 0b10, description: "135°C" }
        Reserved: { value: 0b11, description: "Reserved" }
    die_temp_detect_enable:
      base: bool
      start: 0
      description: "DIE Temperature Detect Enable (true: enable, false: disable)."

MinSystemVoltageControl:
  # REG14H - vsys_min
  type: register
  address: 0x14
  size_bits: 8
  access: RW
  reset_value: 0x60 # In_vsys_dpm=110b for 4.7V
  description: |
    Minimum system voltage control.
  fields:
    # Bit 7 is reserved
    in_vsys_dpm:
      base: uint
      start: 4
      end: 7 # 3 bits
      description: "Linear Charger Vsys voltage dpm. 4.1V + N*0.1V"
      conversion:
        name: MinSystemVoltage
        V4_1: { value: 0b000, description: "4.1V" }
        V4_2: { value: 0b001, description: "4.2V" }
        V4_3: { value: 0b010, description: "4.3V" }
        V4_4: { value: 0b011, description: "4.4V" }
        V4_5: { value: 0b100, description: "4.5V" }
        V4_6: { value: 0b101, description: "4.6V" }
        V4_7: { value: 0b110, description: "4.7V" }
        V4_8: { value: 0b111, description: "4.8V" }
    # Bits 3:0 are reserved

VindpmConfig:
  # REG15H - vindpm_cfg
  type: register
  address: 0x15
  size_bits: 8
  access: RW
  reset_value: 0x6 # Default 4.36V
  description: |
    VINDPM (Input Voltage Dynamic Power Management) configuration register.
    Controls the minimum input voltage threshold for power management.
  fields:
    # Bits 7-4 are reserved
    vindpm_threshold:
      base: uint
      start: 0
      end: 4 # 4 bits
      description: "VINDPM threshold configuration."
      conversion:
        name: VindpmVoltage
        V3_88: { value: 0x0, description: "3.88V" }
        V3_96: { value: 0x1, description: "3.96V" }
        V4_04: { value: 0x2, description: "4.04V" }
        V4_12: { value: 0x3, description: "4.12V" }
        V4_20: { value: 0x4, description: "4.20V" }
        V4_28: { value: 0x5, description: "4.28V" }
        V4_36: { value: 0x6, description: "4.36V" }
        V4_44: { value: 0x7, description: "4.44V" }
        V4_52: { value: 0x8, description: "4.52V" }
        V4_60: { value: 0x9, description: "4.60V" }
        V4_68: { value: 0xa, description: "4.68V" }
        V4_76: { value: 0xb, description: "4.76V" }
        V4_84: { value: 0xc, description: "4.84V" }
        V4_92: { value: 0xd, description: "4.92V" }
        V5_00: { value: 0xe, description: "5.00V" }
        V5_08: { value: 0xf, description: "5.08V" }

InputCurrentLimit:
  # REG16H - iin_lim
  type: register
  address: 0x16
  size_bits: 8
  access: RW
  reset_value: 0x1 # Default 500mA
  description: |
    Input current limit configuration register.
    Sets the maximum allowable input current from VBUS.
  fields:
    # Bits 7-3 are reserved
    current_limit:
      base: uint
      start: 0
      end: 3 # 3 bits
      description: "Input current limit setting."
      conversion:
        name: InputCurrentLimit
        Ma100: { value: 0b000, description: "100mA" }
        Ma500: { value: 0b001, description: "500mA" }
        Ma900: { value: 0b010, description: "900mA" }
        Ma1000: { value: 0b011, description: "1000mA" }
        Ma1500: { value: 0b100, description: "1500mA" }
        Ma2000: { value: 0b101, description: "2000mA" }
        Reserved1: { value: 0b110, description: "Reserved" }
        Reserved2: { value: 0b111, description: "Reserved" }

# =============================================================================
# POWER ON/OFF AND RESET REGISTERS
# =============================================================================

PowerOnStatus:
  # REG20H - pwron_stat
  type: register
  address: 0x20
  size_bits: 8
  access: RO
  description: "Indicates the source of the power-on event."
  fields:
    en_pwron_stat:
      base: bool
      start: 5
      description: "POWERON always high when EN Mode as POWERON Source (true: yes, false: no)."
    bat_pwron_stat:
      base: bool
      start: 4
      description: "Battery Insert and Good as POWERON Source (true: yes, false: no)."
    chg_pwron_stat:
      base: bool
      start: 3
      description: "Battery Voltage > 3.3V when Charged as POWERON Source (true: yes, false: no)."
    vbus_pwron_stat:
      base: bool
      start: 2
      description: "Vbus Insert and Good as POWERON Source (true: yes, false: no)."
    irq_pwron_stat:
      base: bool
      start: 1
      description: "IRQ PIN Pull-down as POWERON Source (true: yes, false: no)."
    btn_pwron_stat:
      base: bool
      start: 0
      description: "POWERON low for onlevel when POWERON Mode as POWERON Source (true: yes, false: no)."

PowerOffStatus:
  # REG21H - pwroff_stat
  type: register
  address: 0x21
  size_bits: 8
  access: RO
  description: "Indicates the source of the power-off event."
  fields:
    dot_pwroff_stat:
      base: bool
      start: 7
      description: "Die Over Temperature as POWEROFF Source (true: yes, false: no)."
    dcov_pwroff_stat:
      base: bool
      start: 6
      description: "DCDC Over Voltage as POWEROFF Source (true: yes, false: no)."
    dcuv_pwroff_stat:
      base: bool
      start: 5
      description: "DCDC Under Voltage as POWEROFF Source (true: yes, false: no)."
    vbov_pwroff_stat:
      base: bool
      start: 4
      description: "VBUS Over Voltage as POWEROFF Source (true: yes, false: no)."
    vsuv_pwroff_stat:
      base: bool
      start: 3
      description: "Vsys Under Voltage as POWEROFF Source (true: yes, false: no)."
    en_pwroff_stat:
      base: bool
      start: 2
      description: "POWERON always low when EN Mode as POWEROFF Source (true: yes, false: no)."
    sw_pwroff_stat:
      base: bool
      start: 1
      description: "Software config as POWEROFF Source (true: yes, false: no)."
    btn_pwroff_stat:
      base: bool
      start: 0
      description: "POWERON Pull down for offlevel when POWERON Mode as POWEROFF Source (true: yes, false: no)."

PowerOffEnable:
  # REG22H - pwroff_en
  type: register
  address: 0x22
  size_bits: 8
  access: RW
  description: "Enables different sources for power-off events."
  fields:
    dot_pwroff_en:
      base: bool
      start: 2
      description: "DIE Over-Temperature (LEVEL2) as POWEROFF Source enable (true: enable, false: disable)."
    btn_pwroff_en:
      base: bool
      start: 1
      description: "PWRON > OFFLEVEL as POWEROFF Source enable (true: enable, false: disable)."
    btn_pwroff_mode:
      base: bool
      start: 0
      description: "Function Select when btn_pwroff_en=1 and button power-off occur (0: Power-off, 1: Restart)."

DcdcPowerOffControl:
  # REG23H - dcdc_pwroff_en
  type: register
  address: 0x23
  size_bits: 8
  access: RW
  description: "Controls DCDC OVP/UVP power-off enables."
  fields:
    dcdc_ovp_en:
      base: bool
      start: 5
      description: "DCDC 120%(130%) high voltage turn off PMIC function (true: enable, false: disable)."
    dcdc4_uvp_en:
      base: bool
      start: 3
      description: "DCDC4 85% low voltage turn off PMIC function (true: enable, false: disable)."
    dcdc3_uvp_en:
      base: bool
      start: 2
      description: "DCDC3 85% low voltage turn off PMIC function (true: enable, false: disable)."
    dcdc2_uvp_en:
      base: bool
      start: 1
      description: "DCDC2 85% low voltage turn off PMIC function (true: enable, false: disable)."
    dcdc1_uvp_en:
      base: bool
      start: 0
      description: "DCDC1 85% low voltage turn off PMIC function (true: enable, false: disable)."

VoffThreshold:
  # REG24H - voff_thld
  type: register
  address: 0x24
  size_bits: 8
  access: RW
  description: "Vsys voltage for POWEROFF threshold setting."
  fields:
    voff_thld:
      base: uint
      start: 0
      end: 3 # 3 bits
      description: "Battery Voltage for POWEROFF (2.6V + N*0.1V)."
      conversion:
        name: VoffVoltage
        V2_6: { value: 0b000, description: "2.6V" }
        V2_7: { value: 0b001, description: "2.7V" }
        V2_8: { value: 0b010, description: "2.8V" }
        V2_9: { value: 0b011, description: "2.9V" }
        V3_0: { value: 0b100, description: "3.0V" }
        V3_1: { value: 0b101, description: "3.1V" }
        V3_2: { value: 0b110, description: "3.2V" }
        V3_3: { value: 0b111, description: "3.3V" }

PowerTimingControl:
  # REG25H - pwr_time_ctr1
  type: register
  address: 0x25
  size_bits: 8
  access: RW
  description: "PWROK setting and PWROFF sequence control."
  fields:
    pwrok_chk_en:
      base: bool
      start: 4
      description: "Check the PWROK Pin enable after all dcdc/ldo output valid 128ms (true: enable, false: disable)."
    pwroff_dly_en:
      base: bool
      start: 3
      description: "POWEROFF Delay 4ms after PWROK disable (true: enable, false: disable)."
    pwroff_seq_ctrl:
      base: bool
      start: 2
      description: "POWEROFF Sequence Control (0: At the same time, 1: the reverse of the Startup)."
    pwrok_dly:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "Delay of PWROK after all power output good."
      conversion:
        name: PwrokDelay
        Ms8: { value: 0b00, description: "8ms" }
        Ms16: { value: 0b01, description: "16ms" }
        Ms32: { value: 0b10, description: "32ms" }
        Ms64: { value: 0b11, description: "64ms" }

SleepWakeupControl:
  # REG26H - sleep_cfg
  type: register
  address: 0x26
  size_bits: 8
  access: RW
  description: "Sleep and wakeup control."
  fields:
    irq_wakeup_en:
      base: bool
      start: 4
      description: "IRQ Pin low to Wakeup (true: enable, false: disable)."
    pwrok_wakeup_ind:
      base: bool
      start: 3
      description: "PWROK be low-level enable when Wakup (true: enable, false: disable)."
    wakeup_cfg_sel:
      base: bool
      start: 2
      description: "DCDC/LDO Voltage Select when Wakup (0: The Default, 1: The voltage before wakup)."
    wakeup_en:
      base: bool
      start: 1
      description: "Wake Up enable (true: enable, false: disable)."
    sleep_en:
      base: bool
      start: 0
      description: "SLEEP enable (true: enable, false: disable)."

PowerOnLevel:
  # REG27H - ponlevel
  type: register
  address: 0x27
  size_bits: 8
  access: RW
  description: "IRQLEVEL/OFFLEVEL/ONLEVEL setting."
  fields:
    irq_level:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "IRQLEVEL config."
      conversion:
        name: IrqLevel
        S1: { value: 0b00, description: "1s" }
        S1_5: { value: 0b01, description: "1.5s" }
        S2: { value: 0b10, description: "2s" }
        S2_5: { value: 0b11, description: "2.5s" }
    off_level:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "OFFLEVEL config."
      conversion:
        name: OffLevel
        S4: { value: 0b00, description: "4s" }
        S6: { value: 0b01, description: "6s" }
        S8: { value: 0b10, description: "8s" }
        S10: { value: 0b11, description: "10s" }
    on_level:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "ONLEVEL config."
      conversion:
        name: OnLevel
        Ms128: { value: 0b00, description: "128ms" }
        Ms512: { value: 0b01, description: "512ms" }
        S1: { value: 0b10, description: "1s" }
        S2: { value: 0b11, description: "2s" }

FastPowerOnConfig0:
  # REG28H - fast_pwron_cfg0
  type: register
  address: 0x28
  size_bits: 8
  access: RW
  description: "Fast power-on setting for DCDCs."
  fields:
    dcdc4_fstart_seq:
      base: uint
      start: 6
      end: 8 # 2 bits
      description: "DCDC4 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    dcdc3_fstart_seq:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "DCDC3 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    dcdc2_fstart_seq:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "DCDC2 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    dcdc1_fstart_seq:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "DCDC1 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."

FastPowerOnConfig1:
  # REG29H - fast_pwron_cfg1
  type: register
  address: 0x29
  size_bits: 8
  access: RW
  description: "Fast power-on setting for ALDOs."
  fields:
    aldo3_fstart_seq:
      base: uint
      start: 6
      end: 8 # 2 bits
      description: "ALDO3 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    aldo2_fstart_seq:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "ALDO2 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    aldo1_fstart_seq:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "ALDO1 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."

FastPowerOnConfig2:
  # REG2AH - fast_pwron_cfg2
  type: register
  address: 0x2a
  size_bits: 8
  access: RW
  description: "Fast power-on setting for CPUSLDO, BLDOs, and ALDO4."
  fields:
    cpusldo_fstart_seq:
      base: uint
      start: 6
      end: 8 # 2 bits
      description: "CPUSLDO Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    bldo2_fstart_seq:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "BLDO2 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    bldo1_fstart_seq:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "BLDO1 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    aldo4_fstart_seq:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "ALDO4 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."

FastPowerOnConfig3:
  # REG2BH - fast_pwron_cfg3
  type: register
  address: 0x2b
  size_bits: 8
  access: RW
  description: "Fast power-on setting and control for DLDOs."
  fields:
    fast_pwron_en:
      base: bool
      start: 7
      description: "Fast Power On Enable (true: enable, false: disable)."
    fast_wakeup_en:
      base: bool
      start: 6
      description: "Fast Wake up Enable (true: enable, false: disable)."
    dldo2_fstart_seq:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "DLDO2 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."
    dldo1_fstart_seq:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "DLDO1 Fast Power On Start Sequence (00-10: Start Sequence Code, 11: disable)."

# =============================================================================
# ADC Channel Enable Control REGISTERS
# =============================================================================

AdcChannelEnable0:
  # REG30H - adc_ch_en0
  type: register
  address: 0x30
  size_bits: 8
  access: RW
  description: "ADC Channel enable control."
  fields:
    gpadc_ch_en:
      base: bool
      start: 5
      description: "general purpose ADC channel enable (true: enable, false: disable)."
    tdie_ch_en:
      base: bool
      start: 4
      description: "die temperature measure ADC channel enable (true: enable, false: disable)."
    vsys_ch_en:
      base: bool
      start: 3
      description: "system voltage measure ADC channel enable (true: enable, false: disable)."
    vbus_ch_en:
      base: bool
      start: 2
      description: "vbus voltage measure ADC channel enable (true: enable, false: disable)."
    ts_ch_en:
      base: bool
      start: 1
      description: "TS pin measure ADC channel enable (true: enable, false: disable)."
    vbat_ch_en:
      base: bool
      start: 0
      description: "battery voltage measure ADC channel enable (true: enable, false: disable)."

BatteryParameter:
  # REGA1H - brom
  type: register
  address: 0xa1
  size_bits: 8
  access: RW
  description: "Battery parameter ROM."
  fields:
    brom:
      base: uint
      start: 0
      end: 8

FuelGaugeControl:
  # REGA2H - config
  type: register
  address: 0xa2
  size_bits: 8
  access: RW
  description: "Fuel gauge control."
  fields:
    rom_sel:
      base: bool
      start: 4
      description: "ROM or SRAM select (1: select sram, 0: select rom)."
    bromup_en:
      base: bool
      start: 0
      description: "brom writer control (1: enable, 0: disable)."

# =============================================================================
# CHARGER CONTROL REGISTERS
# =============================================================================

ModuleEnable:
  # REG18H - module_en
  type: register
  address: 0x18
  size_bits: 8
  access: RW
  reset_value: 0xa # Gauge and charge enabled by default
  description: |
    Module enable register controlling major system functions including
    fuel gauge, battery charging, and watchdog functionality.
  fields:
    # Bits 7-4 are reserved
    fuel_gauge_enable:
      base: bool
      start: 3
      description: "Fuel Gauge module enable (true: enable, false: disable)."

    button_battery_charge_enable:
      base: bool
      start: 2
      description: "Button battery charge enable (true: enable, false: disable)."

    battery_charge_enable:
      base: bool
      start: 1
      description: "Cell battery charge enable (true: enable, false: disable)."

    watchdog_enable:
      base: bool
      start: 0
      description: "Watchdog module enable (true: enable, false: disable)."

WatchdogControl:
  # REG19H - watchdog_cfg
  type: register
  address: 0x19
  size_bits: 8
  access: RW
  reset_value: 0x6 # watchdog_cfg=110b (64s)
  description: "Watchdog timer control."
  fields:
    # Bits 7:6 are reserved
    watchdog_reset_config:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "Watchdog Reset Config."
      conversion:
        name: WatchdogResetConfig
        IrqOnly: { value: 0b00, description: "IRQ only" }
        IrqAndSystemReset: { value: 0b01, description: "IRQ and System Reset" }
        IrqResetAndPwrokLow: { value: 0b10, description: "IRQ, System Reset and Pull down PWROK 1s" }
        IrqResetAndPowerCycle: { value: 0b11, description: "IRQ, System Reset, DCDC/LDO PWROFF & PWRON" }
    watchdog_clear:
      base: bool
      start: 3
      access: WO # Write-only, auto-clears
      description: "Watchdog clear signal (true: clear)."
    watchdog_timer:
      base: uint
      start: 0
      end: 3 # 3 bits
      description: "TWSI watchdog timer config."
      conversion:
        name: WatchdogTimer
        S1: { value: 0b000, description: "1s" }
        S2: { value: 0b001, description: "2s" }
        S4: { value: 0b010, description: "4s" }
        S8: { value: 0b011, description: "8s" }
        S16: { value: 0b100, description: "16s" }
        S32: { value: 0b101, description: "32s" }
        S64: { value: 0b110, description: "64s" }
        S128: { value: 0b111, description: "128s" }

LowBatteryWarningThreshold:
  # REG1AH - gauge_thld
  type: register
  address: 0x1a
  size_bits: 8
  access: RW
  reset_value: 0xa1 # warn_thld=1010b (15%), shutdown_thld=0001b (1%)
  description: "Low battery warning threshold setting."
  fields:
    warning_threshold:
      base: uint
      start: 4
      end: 8 # 4 bits
      description: "Low battery warning threshold 5-20%, 1% per step. (value + 5)%"
    shutdown_threshold:
      base: uint
      start: 0
      end: 4 # 4 bits
      description: "Low battery shutdown threshold 0-15%, 1% per step."

PrechargeCurrentConfig:
  # REG61H - iprechg_cfg
  type: register
  address: 0x61
  size_bits: 8
  access: RW
  reset_value: 0x5 # Default 125mA
  description: |
    Pre-charge current limit configuration.
    Controls the charging current during the pre-charge phase when battery voltage is low.
  fields:
    # Bits 7-4 are reserved
    precharge_current:
      base: uint
      start: 0
      end: 4 # 4 bits
      description: "Pre-charge current limit (25mA per step)."
      conversion:
        name: PrechargeCurrentLimit
        Ma0: { value: 0x0, description: "0mA" }
        Ma25: { value: 0x1, description: "25mA" }
        Ma50: { value: 0x2, description: "50mA" }
        Ma75: { value: 0x3, description: "75mA" }
        Ma100: { value: 0x4, description: "100mA" }
        Ma125: { value: 0x5, description: "125mA" }
        Ma150: { value: 0x6, description: "150mA" }
        Ma175: { value: 0x7, description: "175mA" }
        Ma200: { value: 0x8, description: "200mA" }
        Reserved: { value: "default", description: "Reserved values 9-15" }

FastChargeCurrentConfig:
  # REG62H - icc_cfg
  type: register
  address: 0x62
  size_bits: 8
  access: RW
  description: |
    Fast charge (constant current) current limit configuration.
    Controls the charging current during the main charging phase.
  fields:
    # Bits 7-5 are reserved
    fast_charge_current:
      base: uint
      start: 0
      end: 5 # 5 bits
      description: "Fast charge current limit."
      conversion:
        name: FastChargeCurrentLimit
        Ma0: { value: 0x0, description: "0mA" }
        Ma100: { value: 0x4, description: "100mA" }
        Ma125: { value: 0x5, description: "125mA" }
        Ma150: { value: 0x6, description: "150mA" }
        Ma175: { value: 0x7, description: "175mA" }
        Ma200: { value: 0x8, description: "200mA" }
        Ma300: { value: 0x9, description: "300mA" }
        Ma400: { value: 0xa, description: "400mA" }
        Ma500: { value: 0xb, description: "500mA" }
        Ma600: { value: 0xc, description: "600mA" }
        Ma700: { value: 0xd, description: "700mA" }
        Ma800: { value: 0xe, description: "800mA" }
        Ma900: { value: 0xf, description: "900mA" }
        Ma1000: { value: 0x10, description: "1000mA" }
        Reserved: { value: "default", description: "Reserved values" }

TerminationCurrentConfig:
  # REG63H - iterm_cfg
  type: register
  address: 0x63
  size_bits: 8
  access: RW
  reset_value: 0x15 # Termination enabled, 125mA
  description: |
    Charge termination current configuration.
    Controls when charging stops based on current level.
  fields:
    # Bits 7-5 are reserved
    termination_enable:
      base: bool
      start: 4
      description: "Charging termination current enable (true: enable, false: disable)."

    termination_current:
      base: uint
      start: 0
      end: 4 # 4 bits
      description: "Termination current limit (25mA per step)."
      conversion:
        name: TerminationCurrentLimit
        Ma0: { value: 0x0, description: "0mA" }
        Ma25: { value: 0x1, description: "25mA" }
        Ma50: { value: 0x2, description: "50mA" }
        Ma75: { value: 0x3, description: "75mA" }
        Ma100: { value: 0x4, description: "100mA" }
        Ma125: { value: 0x5, description: "125mA" }
        Ma150: { value: 0x6, description: "150mA" }
        Ma175: { value: 0x7, description: "175mA" }
        Ma200: { value: 0x8, description: "200mA" }
        Reserved: { value: "default", description: "Reserved values 9-15" }

ChargeVoltageConfig:
  # REG64H - chg_v_cfg
  type: register
  address: 0x64
  size_bits: 8
  access: RW
  reset_value: 0x3 # Default 4.2V
  description: |
    Charge voltage limit configuration.
    Sets the target voltage for battery charging.
  fields:
    # Bits 7-3 are reserved
    charge_voltage:
      base: uint
      start: 0
      end: 3 # 3 bits
      description: "Charge voltage limit setting."
      conversion:
        name: ChargeVoltageLimit
        V4_6: { value: 0b000, description: "4.6V" }
        V4_0: { value: 0b001, description: "4.0V" }
        V4_1: { value: 0b010, description: "4.1V" }
        V4_2: { value: 0b011, description: "4.2V" }
        V4_35: { value: 0b100, description: "4.35V" }
        V4_4: { value: 0b101, description: "4.4V" }
        Reserved1: { value: 0b110, description: "Reserved" }
        Reserved2: { value: 0b111, description: "Reserved" }

# =============================================================================
# POWER OUTPUT CONTROL REGISTERS
# =============================================================================

DcdcConfig0:
  # REG80H - dcdc_cfg0
  type: register
  address: 0x80
  size_bits: 8
  access: RW
  description: |
    DCDC configuration register 0 controlling DCDC enables and DVM settings.
  fields:
    # Bit 7 is reserved
    dcdc_force_ccm:
      base: bool
      start: 6
      description: "Force DCDC to work in CCM mode (true: enable, false: disable)."

    dvm_speed:
      base: bool
      start: 5
      description: "DVM voltage ramp control (true: 31.250us/step, false: 15.625us/step)."

    dcdc4_enable:
      base: bool
      start: 3
      description: "DCDC4 enable (true: enable, false: disable)."

    dcdc3_enable:
      base: bool
      start: 2
      description: "DCDC3 enable (true: enable, false: disable)."

    dcdc2_enable:
      base: bool
      start: 1
      description: "DCDC2 enable (true: enable, false: disable)."

    dcdc1_enable:
      base: bool
      start: 0
      description: "DCDC1 enable (true: enable, false: disable)."

DcdcConfig1:
  # REG81H - dcdc_cfg1
  type: register
  address: 0x81
  size_bits: 8
  access: RW
  description: |
    DCDC configuration register 1 controlling PWM/PFM modes and frequency spreading.
  fields:
    dcdc_frequency_spread_enable:
      base: bool
      start: 7
      description: "DCDC frequency spread enable (true: enable, false: disable)."

    dcdc_frequency_spread_range:
      base: bool
      start: 6
      description: "DCDC frequency spread range control (true: 100kHz, false: 50kHz)."

    dcdc4_pwm_mode:
      base: bool
      start: 5
      description: "DCDC4 PWM/PFM control (true: always PWM, false: auto switch)."

    dcdc3_pwm_mode:
      base: bool
      start: 4
      description: "DCDC3 PWM/PFM control (true: always PWM, false: auto switch)."

    dcdc2_pwm_mode:
      base: bool
      start: 3
      description: "DCDC2 PWM/PFM control (true: always PWM, false: auto switch)."

    dcdc1_pwm_mode:
      base: bool
      start: 2
      description: "DCDC1 PWM/PFM control (true: always PWM, false: auto switch)."

    dcdc_uvp_debounce:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "DCDC UVP debounce time configuration."
      conversion:
        name: DcdcUvpDebounce
        Us60: { value: 0b00, description: "60us" }
        Us120: { value: 0b01, description: "120us" }
        Us180: { value: 0b10, description: "180us" }
        Us240: { value: 0b11, description: "240us" }

Dcdc1VoltageConfig:
  # REG82H - dcdc1_cfg
  type: register
  address: 0x82
  size_bits: 8
  access: RW
  description: |
    DCDC1 output voltage configuration.
    Voltage range: 1.5V to 3.4V in 100mV steps.
  fields:
    # Bits 7-5 are reserved
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits
      description: "DCDC1 output voltage (1.5V + value * 100mV)."

Dcdc2VoltageConfig:
  # REG83H - dcdc2_cfg
  type: register
  address: 0x83
  size_bits: 8
  access: RW
  description: |
    DCDC2 output voltage configuration with DVM support.
    Complex voltage mapping: 0.5-1.2V (10mV steps), 1.22-1.54V (20mV steps).
  fields:
    dvm_enable:
      base: bool
      start: 7
      description: "DCDC2 DVM enable control (true: enable, false: disable)."

    voltage_setting:
      base: uint
      start: 0
      end: 7 # 7 bits
      description: "DCDC2 output voltage setting (complex mapping, see datasheet)."

Dcdc3VoltageConfig:
  # REG84H - dcdc3_cfg
  type: register
  address: 0x84
  size_bits: 8
  access: RW
  description: |
    DCDC3 output voltage configuration with DVM support.
    Same voltage mapping as DCDC2: 0.5-1.2V (10mV steps), 1.22-1.54V (20mV steps), 1.6-3.4V (100mV steps).
  fields:
    dvm_enable:
      base: bool
      start: 7
      description: "DCDC3 DVM enable control (true: enable, false: disable)."

    voltage_setting:
      base: uint
      start: 0
      end: 7 # 7 bits
      description: "DCDC3 output voltage setting (complex mapping, see datasheet)."

Dcdc4VoltageConfig:
  # REG85H - dcdc4_cfg
  type: register
  address: 0x85
  size_bits: 8
  access: RW
  description: |
    DCDC4 output voltage configuration.
    Voltage mapping: 0.5-1.2V (10mV steps), 1.22-1.84V (20mV steps).
  fields:
    # Bit 7 is reserved
    voltage_setting:
      base: uint
      start: 0
      end: 7 # 7 bits
      description: "DCDC4 output voltage setting (complex mapping, see datasheet)."

LdoEnableConfig0:
  # REG90H - ldo_en_cfg0
  type: register
  address: 0x90
  size_bits: 8
  access: RW
  description: |
    LDO enable configuration register 0.
    Controls enable/disable state for DLDO1, CPUSLDO, BLDO1-2, ALDO1-4.
  fields:
    dldo1_enable:
      base: bool
      start: 7
      description: "DLDO1 enable (true: enable, false: disable)."

    cpusldo_enable:
      base: bool
      start: 6
      description: "CPUSLDO enable (true: enable, false: disable)."

    bldo2_enable:
      base: bool
      start: 5
      description: "BLDO2 enable (true: enable, false: disable)."

    bldo1_enable:
      base: bool
      start: 4
      description: "BLDO1 enable (true: enable, false: disable)."

    aldo4_enable:
      base: bool
      start: 3
      description: "ALDO4 enable (true: enable, false: disable)."

    aldo3_enable:
      base: bool
      start: 2
      description: "ALDO3 enable (true: enable, false: disable)."

    aldo2_enable:
      base: bool
      start: 1
      description: "ALDO2 enable (true: enable, false: disable)."

    aldo1_enable:
      base: bool
      start: 0
      description: "ALDO1 enable (true: enable, false: disable)."

LdoEnableConfig1:
  # REG91H - ldo_en_cfg1
  type: register
  address: 0x91
  size_bits: 8
  access: RW
  description: |
    LDO enable configuration register 1.
    Controls enable/disable state for DLDO2.
  fields:
    dldo2_enable:
      base: bool
      start: 0
      description: "DLDO2 enable (true: enable, false: disable)."

Aldo1VoltageConfig:
  # REG92H - aldo1_cfg
  type: register
  address: 0x92
  size_bits: 8
  access: RW
  description: "ALDO1 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Aldo2VoltageConfig:
  # REG93H - aldo2_cfg
  type: register
  address: 0x93
  size_bits: 8
  access: RW
  description: "ALDO2 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Aldo3VoltageConfig:
  # REG94H - aldo3_cfg
  type: register
  address: 0x94
  size_bits: 8
  access: RW
  description: "ALDO3 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Aldo4VoltageConfig:
  # REG95H - aldo4_cfg
  type: register
  address: 0x95
  size_bits: 8
  access: RW
  description: "ALDO4 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Bldo1VoltageConfig:
  # REG96H - bldo1_cfg
  type: register
  address: 0x96
  size_bits: 8
  access: RW
  description: "BLDO1 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Bldo2VoltageConfig:
  # REG97H - bldo2_cfg
  type: register
  address: 0x97
  size_bits: 8
  access: RW
  description: "BLDO2 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

CpuSldoVoltageConfig:
  # REG98H - cpusldo_cfg
  type: register
  address: 0x98
  size_bits: 8
  access: RW
  description: "CPUSLDO output voltage config (0.5-1.4V, 50mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Dldo1VoltageConfig:
  # REG99H - dldo1_cfg
  type: register
  address: 0x99
  size_bits: 8
  access: RW
  description: "DLDO1 output voltage config (0.5-3.5V, 100mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

Dldo2VoltageConfig:
  # REG9AH - dldo2_cfg
  type: register
  address: 0x9a
  size_bits: 8
  access: RW
  description: "DLDO2 output voltage config (0.5-1.4V, 50mV/step)."
  fields:
    voltage_setting:
      base: uint
      start: 0
      end: 5 # 5 bits

# =============================================================================
# ADC DATA REGISTERS (Read-only, 14-bit values)
# =============================================================================

BatteryVoltageAdc:
  # REG34H-REG35H
  type: register
  address: 0x34
  size_bits: 16
  access: RO
  byte_order: BE # MSB first
  description: |
    Battery voltage ADC reading. 14-bit resolution.
    High byte: bits [13:8], Low byte: bits [7:0]
    Conversion: Voltage (mV) = adc_value * 1.0 (1mV/LSB)
  fields:
    # Bits 15-14 are reserved in high byte
    raw_value:
      base: uint
      start: 0
      end: 14 # 14-bit ADC value
      description: "Raw 14-bit ADC value. Use driver helper for voltage conversion."

TsPinAdc:
  # REG36H-REG37H  
  type: register
  address: 0x36
  size_bits: 16
  access: RO
  byte_order: BE
  description: |
    TS (Temperature Sensor) pin ADC reading. 14-bit resolution.
    Conversion: Voltage (mV) = adc_value * 0.5 (0.5mV/LSB)
  fields:
    adc_low_freq_enable:
      base: bool
      start: 15 # Bit 7 of high byte
      access: RW
      description: "ADC low frequency sample mode when PWROFF and battery only (64s)."

    # Bit 14 is reserved
    raw_value:
      base: uint
      start: 0
      end: 14
      description: "Raw 14-bit TS ADC value. Use driver helper for voltage conversion."

VbusVoltageAdc:
  # REG38H-REG39H
  type: register
  address: 0x38
  size_bits: 16
  access: RO
  byte_order: BE
  description: |
    VBUS voltage ADC reading. 14-bit resolution.
    Conversion: Voltage (mV) = adc_value * 1.0 (1mV/LSB)
  fields:
    # Bits 15-14 are reserved
    raw_value:
      base: uint
      start: 0
      end: 14
      description: "Raw 14-bit VBUS ADC value. Use driver helper for voltage conversion."

VsysVoltageAdc:
  # REG3AH-REG3BH
  type: register
  address: 0x3a
  size_bits: 16
  access: RO
  byte_order: BE
  description: |
    VSYS voltage ADC reading. 14-bit resolution.
    Conversion: Voltage (mV) = adc_value * 1.0 (1mV/LSB)
  fields:
    # Bits 15-14 are reserved
    raw_value:
      base: uint
      start: 0
      end: 14
      description: "Raw 14-bit VSYS ADC value. Use driver helper for voltage conversion."

InternalTemperatureAdc:
  # REG3CH-REG3DH
  type: register
  address: 0x3c
  size_bits: 16
  access: RO
  byte_order: BE
  description: |
    Internal die temperature ADC reading. 14-bit resolution.
    Conversion: Temperature (°C) = (adc_value * 0.1) - 144.7
  fields:
    # Bits 15-14 are reserved
    raw_value:
      base: uint
      start: 0
      end: 14
      description: "Raw 14-bit temperature ADC value. Use driver helper for temperature conversion."

GpadcAdc:
  # REG3EH-REG3FH
  type: register
  address: 0x3e
  size_bits: 16
  access: RO
  byte_order: BE
  description: |
    General purpose ADC reading. 14-bit resolution.
  fields:
    raw_value:
      base: uint
      start: 0
      end: 14
      description: "Raw 14-bit GPADC value."

# =============================================================================
# INTERRUPT CONTROL REGISTERS
# =============================================================================

IrqEnable0:
  # REG40H - irq_en0
  type: register
  address: 0x40
  size_bits: 8
  access: RW
  reset_value: 0xff # All battery/gauge IRQs enabled by default
  description: |
    Interrupt enable register 0 for battery and fuel gauge related interrupts.
  fields:
    soc_warning_level2_irq_enable:
      base: bool
      start: 7
      description: "SOC drop to Warning Level2 IRQ enable."

    soc_warning_level1_irq_enable:
      base: bool
      start: 6
      description: "SOC drop to Warning Level1 IRQ enable."

    gauge_watchdog_timeout_irq_enable:
      base: bool
      start: 5
      description: "Gauge watchdog timeout IRQ enable."

    new_soc_irq_enable:
      base: bool
      start: 4
      description: "Gauge new SOC IRQ enable."

    battery_charge_over_temp_irq_enable:
      base: bool
      start: 3
      description: "Battery over temperature in charge mode IRQ enable."

    battery_charge_under_temp_irq_enable:
      base: bool
      start: 2
      description: "Battery under temperature in charge mode IRQ enable."

    battery_work_over_temp_irq_enable:
      base: bool
      start: 1
      description: "Battery over temperature in work mode IRQ enable."

    battery_work_under_temp_irq_enable:
      base: bool
      start: 0
      description: "Battery under temperature in work mode IRQ enable."

IrqEnable1:
  # REG41H - irq_en1
  type: register
  address: 0x41
  size_bits: 8
  access: RW
  reset_value: 0xf8 # VBUS, battery, and power key IRQs enabled
  description: |
    Interrupt enable register 1 for VBUS, battery insertion/removal, and power key events.
  fields:
    vbus_insert_irq_enable:
      base: bool
      start: 7
      description: "VBUS insert IRQ enable."

    vbus_remove_irq_enable:
      base: bool
      start: 6
      description: "VBUS remove IRQ enable."

    battery_insert_irq_enable:
      base: bool
      start: 5
      description: "Battery insert IRQ enable."

    battery_remove_irq_enable:
      base: bool
      start: 4
      description: "Battery remove IRQ enable."

    power_key_short_press_irq_enable:
      base: bool
      start: 3
      description: "Power key short press IRQ enable."

    power_key_long_press_irq_enable:
      base: bool
      start: 2
      description: "Power key long press IRQ enable."

    power_key_negative_edge_irq_enable:
      base: bool
      start: 1
      description: "Power key negative edge IRQ enable."

    power_key_positive_edge_irq_enable:
      base: bool
      start: 0
      description: "Power key positive edge IRQ enable."

IrqEnable2:
  # REG42H - irq_en2
  type: register
  address: 0x42
  size_bits: 8
  access: RW
  description: "Interrupt enable register 2 for various system events."
  fields:
    wdexp_irq_en:
      base: bool
      start: 7
      description: "Watchdog Expire IRQ enable (true: enable, false: disable)."
    ldooc_irq_en:
      base: bool
      start: 6
      description: "LDO Over Current IRQ enable (true: enable, false: disable)."
    bocp_irq_en:
      base: bool
      start: 5
      description: "BATFET Over Current Protection IRQ enable (true: enable, false: disable)."
    chgdn_irq_en:
      base: bool
      start: 4
      description: "Battery charge done IRQ enable (true: enable, false: disable)."
    chgst_irq_en:
      base: bool
      start: 3
      description: "Charger start IRQ enable (true: enable, false: disable)."
    dot11_irq_en:
      base: bool
      start: 2
      description: "DIE Over Temperature level1 IRQ enable (true: enable, false: disable)."
    chgte_irq_en:
      base: bool
      start: 1
      description: "Charger Safety Timer1/2 expire IRQ enable (true: enable, false: disable)."
    bovp_irq_en:
      base: bool
      start: 0
      description: "Battery Over Voltage Protection IRQ enable (true: enable, false: disable)."

IrqStatus0:
  # REG48H - irq0 (Write 1 to clear)
  type: register
  address: 0x48
  size_bits: 8
  access: RW # Write 1 to clear status bits
  reset_value: 0x0
  description: |
    Interrupt status register 0. Write 1 to corresponding bit to clear the interrupt.
    Corresponds to interrupt enable register 0 (REG40H).
  fields:
    soc_warning_level2_irq:
      base: bool
      start: 7
      description: "SOC drop to Warning Level2 IRQ status. Write 1 to clear."

    soc_warning_level1_irq:
      base: bool
      start: 6
      description: "SOC drop to Warning Level1 IRQ status. Write 1 to clear."

    gauge_watchdog_timeout_irq:
      base: bool
      start: 5
      description: "Gauge watchdog timeout IRQ status. Write 1 to clear."

    new_soc_irq:
      base: bool
      start: 4
      description: "Gauge new SOC IRQ status. Write 1 to clear."

    battery_charge_over_temp_irq:
      base: bool
      start: 3
      description: "Battery over temperature in charge mode IRQ status. Write 1 to clear."

    battery_charge_under_temp_irq:
      base: bool
      start: 2
      description: "Battery under temperature in charge mode IRQ status. Write 1 to clear."

    battery_work_over_temp_irq:
      base: bool
      start: 1
      description: "Battery over temperature in work mode IRQ status. Write 1 to clear."

    battery_work_under_temp_irq:
      base: bool
      start: 0
      description: "Battery under temperature in work mode IRQ status. Write 1 to clear."

IrqStatus1:
  # REG49H - irq1 (Write 1 to clear)
  type: register
  address: 0x49
  size_bits: 8
  access: RW
  reset_value: 0x0
  description: "Interrupt status register 1. Corresponds to irq_en1."
  fields:
    vinsert_irq:
      base: bool
      start: 7
      description: "VBUS Insert IRQ. Write 1 to clear."
    vremove_irq:
      base: bool
      start: 6
      description: "VBUS Remove IRQ. Write 1 to clear."
    binsert_irq:
      base: bool
      start: 5
      description: "Battery Insert IRQ. Write 1 to clear."
    bremove_irq:
      base: bool
      start: 4
      description: "Battery Remove IRQ. Write 1 to clear."
    pons_irq:
      base: bool
      start: 3
      description: "POWERON Short PRESS IRQ. Write 1 to clear."
    ponl_irq:
      base: bool
      start: 2
      description: "POWERON Long PRESS IRQ. Write 1 to clear."
    ponn_irq:
      base: bool
      start: 1
      description: "POWERON Negative Edge IRQ. Write 1 to clear."
    ponp_irq:
      base: bool
      start: 0
      description: "POWERON Positive Edge IRQ. Write 1 to clear."

IrqStatus2:
  # REG4AH - irq2 (Write 1 to clear)
  type: register
  address: 0x4a
  size_bits: 8
  access: RW
  reset_value: 0x0
  description: "Interrupt status register 2. Corresponds to irq_en2."
  fields:
    wdexp_irq:
      base: bool
      start: 7
      description: "Watchdog Expire IRQ. Write 1 to clear."
    ldooc_irq:
      base: bool
      start: 6
      description: "LDO Over Current IRQ. Write 1 to clear."
    bocp_irq:
      base: bool
      start: 5
      description: "BATFET Over Current Protection IRQ. Write 1 to clear."
    chgdn_irq:
      base: bool
      start: 4
      description: "Battery charge done IRQ. Write 1 to clear."
    chgst_irq:
      base: bool
      start: 3
      description: "Battery charge start IRQ. Write 1 to clear."
    dot11_irq:
      base: bool
      start: 2
      description: "DIE Over Temperature level1 IRQ. Write 1 to clear."
    chgte_irq:
      base: bool
      start: 1
      description: "Charger Safety Timer1/2 expire IRQ. Write 1 to clear."
    bovp_irq:
      base: bool
      start: 0
      description: "Battery Over Voltage Protection IRQ. Write 1 to clear."

# =============================================================================
# TS Pin and GPADC Control Registers
# =============================================================================

TsPinControl:
  # REG50H - ts_cfg
  type: register
  address: 0x50
  size_bits: 8
  access: RW
  description: "TS pin and GPADC mode control."
  fields:
    ts_func:
      base: bool
      start: 4
      description: "TS PIN function select (0: battery temp sensor, 1: external input)."
    ts_src_en:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "TS current source on/off enable."
      conversion:
        name: TsSourceEnable
        Off: { value: 0b00, description: "Off" }
        OnWhenAdcEnabled: { value: 0b01, description: "On when TS channel of ADC is enabled" }
        OnWhenTsWorking: { value: 0b10, description: "On only when TS channel is working" }
        AlwaysOn: { value: 0b11, description: "Always on" }
    ts_curr:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "current source to TS pin config."
      conversion:
        name: TsCurrent
        Ua20: { value: 0b00, description: "20uA" }
        Ua40: { value: 0b01, description: "40uA" }
        Ua50: { value: 0b10, description: "50uA" }
        Ua60: { value: 0b11, description: "60uA" }

TsHysteresisL2H:
  # REG52H - ts_hys12h
  type: register
  address: 0x52
  size_bits: 8
  access: RW
  description: "Hysteresis for TS from low go to normal. Thys = N * 16mV."
  fields:
    hysteresis:
      base: uint
      start: 0
      end: 8

TsHysteresisH2L:
  # REG53H - ts_hysh21
  type: register
  address: 0x53
  size_bits: 8
  access: RW
  description: "Hysteresis for TS from high go to normal. Thys = N * 4mV."
  fields:
    hysteresis:
      base: uint
      start: 0
      end: 8

VltfChg:
  # REG54H - vltf_chg
  type: register
  address: 0x54
  size_bits: 8
  access: RW
  description: "VLTF in voltage of charge config. VLTF = N * 32mV."
  fields:
    threshold:
      base: uint
      start: 0
      end: 8

VhtfChg:
  # REG55H - vhtf_chg
  type: register
  address: 0x55
  size_bits: 8
  access: RW
  description: "VHTF in voltage of charge config. VHTF = N * 2mV."
  fields:
    threshold:
      base: uint
      start: 0
      end: 8

VltfWork:
  # REG56H - vltf_work
  type: register
  address: 0x56
  size_bits: 8
  access: RW
  description: "VLTF in voltage of work config. VLTF = N * 32mV."
  fields:
    threshold:
      base: uint
      start: 0
      end: 8

VhtfWork:
  # REG57H - vhtf_work
  type: register
  address: 0x57
  size_bits: 8
  access: RW
  description: "VHTF in voltage of work config. VHTF = N * 2mV."
  fields:
    threshold:
      base: uint
      start: 0
      end: 8

JeitaEnable:
  # REG58H - jeita_cfg
  type: register
  address: 0x58
  size_bits: 8
  access: RW
  description: "JEITA standard Enable control."
  fields:
    jeita_en:
      base: bool
      start: 0
      description: "JEITA Standard Enable (true: enable, false: disable)."

# =============================================================================
# JEITA Standard Registers
# =============================================================================

JeitaConfig:
  # REG59H - jeita_cv_cfg
  type: register
  address: 0x59
  size_bits: 8
  access: RW
  description: "JEITA standard charge voltage and current fall settings."
  fields:
    jwarm_ifall:
      base: bool
      start: 6
      description: "Current fall of Warm in JEITA Standard (0: 100%, 1: 50%)."
    jcool_ifall:
      base: bool
      start: 4
      description: "Current fall of Cool in JEITA Standard (0: 100%, 1: 50%)."
    jwarm_vfall:
      base: uint
      start: 2
      end: 4 # 2 bits
      description: "Voltage fall of Warm in JEITA Standard."
    jcool_vfall:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "Voltage fall of Cool in JEITA Standard."

JeitaCoolTemp:
  # REG5AH - jeita_cool
  type: register
  address: 0x5a
  size_bits: 8
  access: RW
  description: "Cool Temperature (T2) in voltage of charge config. VHTF = N*16 mV."
  fields:
    threshold:
      base: uint
      start: 0
      end: 8

JeitaWarmTemp:
  # REG5BH - jeita_warm
  type: register
  address: 0x5b
  size_bits: 8
  access: RW
  description: "Warm Temperature (T3) in voltage of charge config. VHTF = N*8 mV."
  fields:
    threshold:
      base: uint
      start: 0
      end: 8

# =============================================================================
# FUEL GAUGE REGISTERS
# =============================================================================

BatteryPercentage:
  # REG A4H - soc
  type: register
  address: 0xa4
  size_bits: 8
  access: RO
  description: |
    Battery State of Charge (SOC) percentage from fuel gauge.
    Range: 0-100% in 1% increments.
  fields:
    percentage:
      base: uint
      start: 0
      end: 8
      description: "Battery percentage (0-100%)."

ResetFuelGauge:
  # REG17H - reset_cfg
  type: register
  address: 0x17
  size_bits: 8
  access: RW
  reset_value: 0x0
  description: "Controls resetting the fuel gauge."
  fields:
    # Bits 7:4 are reserved
    reset_gauge:
      base: bool
      start: 3
      access: WO # Write-only, auto-clears
      description: "Reset the gauge (true: reset)."
    reset_logic_gauge:
      base: bool
      start: 2
      description: "Reset the gauge besides registers (true: reset)."
    # Bits 1:0 are reserved

ThermalRegulationThreshold:
  # REG65H - tregu_thld
  type: register
  address: 0x65
  size_bits: 8
  access: RW
  description: "Thermal regulation threshold setting."
  fields:
    tregu_thld:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "Thermal regulation threshold."
      conversion:
        name: ThermalRegulationThreshold
        Deg60: { value: 0b00, description: "60degC" }
        Deg80: { value: 0b01, description: "80degC" }
        Deg100: { value: 0b10, description: "100degC" }
        Deg120: { value: 0b11, description: "120degC" }

ChargerTimeout:
  # REG67H - chg_tmr_cfg
  type: register
  address: 0x67
  size_bits: 8
  access: RW
  description: "Charger timeout setting and control."
  fields:
    tmr_dt_en:
      base: bool
      start: 7
      description: "safety timer 1/2 setting during DPM or thermal regulation (0: normal, 1: slowed)."
    chg_tmr2_en:
      base: bool
      start: 6
      description: "charge done safe timer enable (true: enable, false: disable)."
    chg_tmr2_cfg:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "charge done safety timer config."
      conversion:
        name: ChargeDoneSafetyTimer
        H5: { value: 0b00, description: "5 hours" }
        H8: { value: 0b01, description: "8 hours" }
        H12: { value: 0b10, description: "12 hours" }
        H20: { value: 0b11, description: "20 hours" }
    chg_tmr1_en:
      base: bool
      start: 2
      description: "pre-charge safe timer enable (true: enable, false: disable)."
    chg_tmr1_cfg:
      base: uint
      start: 0
      end: 2 # 2 bits
      description: "pre-charge safe timer config."
      conversion:
        name: PrechargeSafetyTimer
        Min40: { value: 0b00, description: "40 mins" }
        Min50: { value: 0b01, description: "50 mins" }
        Min60: { value: 0b10, description: "60 mins" }
        Min70: { value: 0b11, description: "70 mins" }

BatteryDetectionControl:
  # REG68H - bat_det
  type: register
  address: 0x68
  size_bits: 8
  access: RW
  description: "Battery detection control."
  fields:
    bat_det_en:
      base: bool
      start: 0
      description: "battery detection enable (true: enable, false: disable)."

ChgLedControl:
  # REG69H - chgled_cfg
  type: register
  address: 0x69
  size_bits: 8
  access: RW
  description: "CHGLED setting and control."
  fields:
    chgled_out_ctrl:
      base: uint
      start: 4
      end: 6 # 2 bits
      description: "CHGLED pin output control when chgled_func is 10b."
    chgled_func:
      base: uint
      start: 1
      end: 3 # 2 bits
      description: "CHGLED pin display function config."
    chgled_en:
      base: bool
      start: 0
      description: "CHGLED pin enable (true: enable, false: disable)."

ButtonBatteryCharge:
  # REG6AH - btn_chg_cfg
  type: register
  address: 0x6a
  size_bits: 8
  access: RW
  description: "Button battery charge termination voltage setting."
  fields:
    btn_chg_cfg:
      base: uint
      start: 0
      end: 3 # 3 bits
      description: "Button Battery charge termination voltage (2.6V + N*0.1V)."
      conversion:
        name: ButtonBatteryChargeVoltage
        V2_6: { value: 0b000, description: "2.6V" }
        V2_7: { value: 0b001, description: "2.7V" }
        V2_8: { value: 0b010, description: "2.8V" }
        V2_9: { value: 0b011, description: "2.9V" }
        V3_0: { value: 0b100, description: "3.0V" }
        V3_1: { value: 0b101, description: "3.1V" }
        V3_2: { value: 0b110, description: "3.2V" }
        V3_3: { value: 0b111, description: "3.3V" }
